#!/usr/bin/env bash
set -euo pipefail

# ==========================================================
# Script de sauvegarde Nextcloud avec rotation automatique
# Compatible cron, test√© sur Ubuntu 22.04
# ==========================================================

# === Binaries (chemins absolus, car cron n'a pas le m√™me PATH) ===
RSYNC="/usr/bin/rsync"
PG_DUMP="/usr/bin/pg_dump"
SSH="/usr/bin/ssh"
PHP="/usr/bin/php"
DATE=$(date +%F-%H%M)   # Format YYYY-MM-DD-HHMM
DAY=$(date +%u)         # Jour de la semaine (1=lundi, 7=dimanche)
WEEK=$(date +%V)        # Num√©ro de la semaine

# === Serveur de backup ===
BACKUP_SERVER="backupuser@192.168.56.10"
BACKUP_DIR="/home/backupuser/backups/nextcloud"

# === Logs ===
LOGFILE="/var/log/backup_nextcloud.log"
exec > >(tee -a $LOGFILE) 2>&1

echo "=== [$(date)] D√©but du backup Nextcloud ==="

# === 0. Pr√©parer les dossiers distants ===
# On cr√©e les r√©pertoires n√©cessaires sur le serveur de backup
${SSH} ${BACKUP_SERVER} "mkdir -p ${BACKUP_DIR}/{data,db,configs/nginx,configs/apache2,configs/php}"

# === 1. Activer le mode maintenance ===
# Nextcloud doit √™tre fig√© pendant le backup pour √©viter des incoh√©rences
echo "[*] Activation du mode maintenance..."
${PHP} /var/www/nextcloud/occ maintenance:mode --on || echo "D√©j√† activ√©"

# === 2. Sauvegarde des fichiers Nextcloud ===
# Synchronisation incr√©mentielle (rsync), suppression des fichiers disparus (--delete)
echo "[*] Sauvegarde des fichiers Nextcloud..."
${RSYNC} -a --delete /var/www/nextcloud/data/ ${BACKUP_SERVER}:${BACKUP_DIR}/data/

# === 3. Dump PostgreSQL avec rotation ===
echo "[*] Dump de la base PostgreSQL..."
SQL_TMP="/tmp/nextcloud_${DATE}.sql"
PGPASSWORD="server" ${PG_DUMP} -U nextcloud -h localhost -d nextcloud > ${SQL_TMP}

# --- Politique de rotation ---
# On garde :
# - Les 7 derniers dumps quotidiens
# - 4 dumps hebdomadaires (un par semaine)
# Les backups sont stock√©s sous ${BACKUP_DIR}/db/
SQL_DAILY="nextcloud_${DATE}.sql"
SQL_WEEKLY="nextcloud_week${WEEK}.sql"

# Copie du dump du jour
${RSYNC} -a ${SQL_TMP} ${BACKUP_SERVER}:${BACKUP_DIR}/db/${SQL_DAILY}

# Copie hebdomadaire (ex: chaque dimanche)
if [[ "$DAY" -eq 7 ]]; then
    ${RSYNC} -a ${SQL_TMP} ${BACKUP_SERVER}:${BACKUP_DIR}/db/${SQL_WEEKLY}
fi

# Nettoyage du fichier temporaire
rm ${SQL_TMP}

# Suppression des dumps quotidiens vieux de plus de 7 jours
${SSH} ${BACKUP_SERVER} "find ${BACKUP_DIR}/db/ -type f -name 'nextcloud_*.sql' -mtime +7 -delete"

# Suppression des dumps hebdo vieux de plus de 30 jours
${SSH} ${BACKUP_SERVER} "find ${BACKUP_DIR}/db/ -type f -name 'nextcloud_week*.sql' -mtime +30 -delete"

# === 4. Sauvegarde des configurations critiques ===
echo "[*] Sauvegarde des configurations syst√®me..."
${RSYNC} -a /etc/nginx/   ${BACKUP_SERVER}:${BACKUP_DIR}/configs/nginx/
${RSYNC} -a /etc/apache2/ ${BACKUP_SERVER}:${BACKUP_DIR}/configs/apache2/
${RSYNC} -a /etc/php/     ${BACKUP_SERVER}:${BACKUP_DIR}/configs/php/

# === 5. D√©sactiver le mode maintenance ===
echo "[*] D√©sactivation du mode maintenance..."
${PHP} /var/www/nextcloud/occ maintenance:mode --off

echo "=== [$(date)] Backup Nextcloud termin√© avec succ√®s ==="

# ==========================================================
# 
# Gestion : backup Nextcloud (donn√©es, DB, configs)
# Rotation : 7 quotidiens + 4 hebdomadaires
#
# Cr√©dit : Inspir√© par des bonnes pratiques DevOps
# Par authentik ü§ù
# ==========================================================
